<!-- #build-sample -->
<project>
    <modelVersion>4.0.0</modelVersion>

    <groupId>hello-akka-java</groupId>
    <artifactId>app-server</artifactId>
    <version>1.0</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.daemon.hostname/> <!-- inject into maven build via -Ddocker.daemon.hostname=the.hostname -->
        <docker.daemon.port>2375</docker.daemon.port>
        <docker.daemon.protocol>http</docker.daemon.protocol>
        <docker.daemon.url>${docker.daemon.protocol}://${docker.daemon.hostname}:${docker.daemon.port}
        </docker.daemon.url>

        <docker.registry>docker.io</docker.registry>
        <docker.repository>${docker.registry}/eclipse</docker.repository>
        <docker.image.additional.tag/>
        <docker.image.jdk>docker.io/adoptopenjdk/openjdk8-openj9:jdk8u162-b12_openj9-0.8.0-alpine</docker.image.jdk>
        <docker.image.port>8080</docker.image.port>

        <policies.docker.image.name>ditto-policies</policies.docker.image.name>
        <things.docker.image.name>ditto-things</things.docker.image.name>
        <things-search.docker.image.name>ditto-things-search</things-search.docker.image.name>
        <gateway.docker.image.name>ditto-gateway</gateway.docker.image.name>
        <concierge.docker.image.name>ditto-concierge</concierge.docker.image.name>
        <connectivity.docker.image.name>ditto-connectivity</connectivity.docker.image.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.12</artifactId>
            <version>2.5.13</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_2.12</artifactId>
            <version>2.5.13</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
<plugin>
  <artifactId>maven-assembly-plugin</artifactId>
  <configuration>
    <archive>
      <manifest>
        <mainClass>com.lightbend.akka.sample.AkkaQuickstart</mainClass>
      </manifest>
    </archive>
    <descriptorRefs>
      <descriptorRef>jar-with-dependencies</descriptorRef>
    </descriptorRefs>
  </configuration>
  <executions>
    <execution>
      <id>make-assembly</id> <!-- this is used for inheritance merges -->
      <phase>package</phase> <!-- bind to the packaging phase -->
      <goals>
        <goal>single</goal>
      </goals>
    </execution>
  </executions>
</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
 	   <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <classpath />
                        <argument>com.lightbend.akka.sample.AkkaQuickstart</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoPull>always</autoPull> <!-- always pull latest BaseImage -->
                    <images>
                        <image>
                            <alias>client</alias>
                            <name>
                                client 
                            </name>
                            <build>
                                <from>${docker.image.jdk}</from>
                                <tags>
                                    <tag>${docker.image.additional.tag}</tag>
                                </tags>
                                <ports>
                                    <port>${docker.image.port}</port>
                                </ports>
                                <env>
                                    <HTTP_PORT>${docker.image.port}</HTTP_PORT>
                                    <HOSTING_ENVIRONMENT>Docker</HOSTING_ENVIRONMENT>
                                </env>
                                <workdir>/opt/ditto</workdir>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <arg>-jar</arg>
                                        <arg>/opt/ditto/starter.jar</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <basedir>/</basedir>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                                <runCmds>
                                <!-- <runCmd>ln -s /opt/ditto/${project.build.finalName}-allinone.jar /opt/ditto/starter.jar</runCmd> -->
                                    <runCmd>ln -s /opt/ditto/app-1.0.jar /opt/ditto/starter.jar</runCmd>
                                </runCmds>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-build-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-build-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>remove</goal>
                                    <!-- In order to clean up! -->
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-push-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-push-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
